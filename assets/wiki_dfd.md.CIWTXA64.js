import{_ as r,a as l}from"./chunks/bigpicture-light.DgB8fnMT.js";import{u as h,c as o,o as s,j as a,e as i,a2 as m,a as e,k as d}from"./chunks/framework.DDIT__tB.js";const g={key:0,src:r,style:{"margin-bottom":"30px"}},c={key:1,src:l,style:{"margin-bottom":"30px"}},b=JSON.parse('{"title":"Working with the Data Flow Diagram model","description":"","frontmatter":{"features":[{"icon":{"dark":"img/diagram-dark.svg","light":"img/diagram-light.svg","alt":"Easy-to-Learn Notation"},"title":"Easy-to-Learn Notation","details":"Based on the proven data flow diagram syntax, learn the basics in minutes and start modeling immediately."}]},"headers":[],"relativePath":"wiki/dfd.md","filePath":"wiki/dfd.md"}'),p={name:"wiki/dfd.md"},y=Object.assign(p,{setup(f){const n=h().isDark;return(u,t)=>(s(),o("div",null,[t[0]||(t[0]=a("h1",{id:"working-with-the-data-flow-diagram-model",tabindex:"-1"},[e("Working with the Data Flow Diagram model "),a("a",{class:"header-anchor",href:"#working-with-the-data-flow-diagram-model","aria-label":'Permalink to "Working with the Data Flow Diagram model"'},"​")],-1)),t[1]||(t[1]=a("p",null,"The Data Flow Diagram model is a model that can be used to model a software system in an easy-to-learn and lightweight fashion.",-1)),t[2]||(t[2]=a("p",null,[e("The Data Flow Diagram model consists of two different metamodels: The "),a("strong",null,"Data Flow Diagram"),e(" describing the nodes, flows and behavior of nodes of the software system. The "),a("strong",null,"Data Dictionary"),e(" describes the attributes of nodes and flows.")],-1)),d(n)?(s(),o("img",g)):i("",!0),d(n)?i("",!0):(s(),o("img",c)),t[3]||(t[3]=m('<h2 id="data-flow-diagram" tabindex="-1">Data Flow Diagram <a class="header-anchor" href="#data-flow-diagram" aria-label="Permalink to &quot;Data Flow Diagram&quot;">​</a></h2><p>The Data Flow Diagram contains <strong>Nodes</strong> that describe a step in the processing of data though the modelled software system. The model distinguishes from the following three types of nodes:</p><table tabindex="0"><thead><tr><th>Node Element</th><th>Semantic Usage</th></tr></thead><tbody><tr><td>Storage Node</td><td>Data is stored/retrieved at this node</td></tr><tr><td>Input/Output Node</td><td>Data enters/exits a system at this node</td></tr><tr><td>Function Node</td><td>Data is processed at this node</td></tr></tbody></table><p>In Addition a Node can have <strong>Ports</strong> that denote that data flows to or from a node. A <strong>Input Pin</strong> denotes that data (typically one) enters the node. An <strong>Output Pin</strong> denotes that data exits the node.</p><p>The Ports of Nodes can be connected using <strong>Flows</strong> that denote that the data from an Output Pin of one node flows into the Input Pin of another.</p><p>Each Output Pin of a Node can have an <strong>Behavior</strong> that describes properties of the data flowing out of this node. This Behavior may depend on the data flowing into the nodes though it&#39;s Input Pins.</p><p>Next, a Node can also have <strong>Node Labels</strong> that describe properties of a node.</p><h2 id="data-dictionary" tabindex="-1">Data Dictionary <a class="header-anchor" href="#data-dictionary" aria-label="Permalink to &quot;Data Dictionary&quot;">​</a></h2><p>The Data Dictionary contains a set of <strong>Label Types</strong> and corresponding <strong>Label Values</strong> that describe the properties of nodes and data in the Data Flow Diagram.</p><div class="tip custom-block"><p class="custom-block-title">Example of an Label Type and Label Values</p><p>For example for modeling a location of a system, one might model the following: A Label Type <code>Location</code> with Label Values <code>EU</code>, <code>NA</code>, <code>Asia</code></p></div>',10))]))}});export{b as __pageData,y as default};
