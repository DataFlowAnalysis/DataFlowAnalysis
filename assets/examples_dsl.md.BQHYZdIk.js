import{_ as s,c as a,o as n,a2 as l}from"./chunks/framework.DDIT__tB.js";const u=JSON.parse('{"title":"DSL Examples","description":"","frontmatter":{},"headers":[],"relativePath":"examples/dsl.md","filePath":"examples/dsl.md"}'),t={name:"examples/dsl.md"};function i(p,e,o,d,r,c){return n(),a("div",null,e[0]||(e[0]=[l(`<h1 id="dsl-examples" tabindex="-1">DSL Examples <a class="header-anchor" href="#dsl-examples" aria-label="Permalink to &quot;DSL Examples&quot;">​</a></h1><h2 id="modelling-simple-flow-rules" tabindex="-1">Modelling simple flow rules <a class="header-anchor" href="#modelling-simple-flow-rules" aria-label="Permalink to &quot;Modelling simple flow rules&quot;">​</a></h2><p>Modelling a constraint matching flows from an originating node that has data properties A to a vertex with vertex properties B:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data A neverFlows vertex B</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Examples</p><p>Sensitive Data never flows to a server outside of the EU:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data Type.Sensitive neverFlows vertex Location.nonEU</span></span></code></pre></div><p>Internal Data never flows to the user:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data Type.Internal neverFlows vertex Role.User</span></span></code></pre></div></div><h2 id="modelling-access-control" tabindex="-1">Modelling Access Control <a class="header-anchor" href="#modelling-access-control" aria-label="Permalink to &quot;Modelling Access Control&quot;">​</a></h2><p>Modelling a constraint matching access control rules for RequiredRoles and AssignedRoles:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data AssignedRoles.$Assigned </span></span>
<span class="line"><span>neverFlows </span></span>
<span class="line"><span>vertex RequiredRoles.$Required</span></span>
<span class="line"><span>where</span></span>
<span class="line"><span>present $Assigned</span></span>
<span class="line"><span>present $Required</span></span>
<span class="line"><span>empty intersection($Assigned,$Required)</span></span></code></pre></div>`,8)]))}const g=s(t,[["render",i]]);export{u as __pageData,g as default};
